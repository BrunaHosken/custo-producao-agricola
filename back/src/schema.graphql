scalar Date

type AuthPayload {
  token: String!
  agricultor: Agricultor!
}
type Agricultor {
  id: ID!
  Nome: String!
  Email: String!
}
type Contato {
  id: ID!
  DescrContato: String!
  Agricultor: Agricultor
}
type TipoDespesa {
  id: ID!
  DescrTipoDespesa: String!
}
type DespesaRealizada {
  id: ID!
  DescrDetalhada: String!
  Data: Date!
  Valor: Float!
  Agricultor: Agricultor
  TipoDespesa: TipoDespesa
}
type Cliente {
  id: ID!
  NomeCliente: String!
  Agricultor: Agricultor
}
type Venda {
  id: ID!
  Data: Date!
  Cliente: Cliente
}
type VendaItem {
  id: ID!
  Qtd: Float!
  Und: String!
  PrecoUnit: Float!
  CulturaDesenvolvida: CulturaDesenvolvida
  Venda: Venda
}
type Cultura {
  id: ID!
  DescrCultura: String!
  QtdEstimadaPorHectare: Float!
  Agricultor: Agricultor
  Und: String!
}
type TipoInsumo {
  id: ID!
  NomeTipo: String!
  Agricultor: Agricultor
}
type Servico {
  id: ID!
  DescrServico: String!
  ValorDiaHomem: Float!
  Agricultor: Agricultor
}
type Insumo {
  id: ID!
  DescrInsumo: String!
  PrecoUnit: Float!
  Und: String!
  TipoInsumo: TipoInsumo
}
type UsoInsumoPrevisto {
  id: ID!
  Qtd: Float!
  CulturaEtapa: CulturaEtapa
  Insumo: Insumo
}
type UsoInsumoReal {
  id: ID!
  Data: Date!
  Qtd: Float!
  CulturaEtapa: CulturaEtapa
  Insumo: Insumo
}
type ServicoPrestado {
  id: ID!
  Data: Date!
  DiasHomem: Float!
  CulturaEtapa: CulturaEtapa
  Servico: Servico
}
type ServicoPrevisto {
  id: ID!
  DiasHomem: Float!
  CulturaEtapa: CulturaEtapa
  Servico: Servico
}
type CulturaEtapa {
  id: ID!
  DescrEtapa: String!
  NumEtapa: Float!
  MesInicio: Date!
  MesFim: Date!
  CulturaDesenvolvida: CulturaDesenvolvida
}
type CulturaDesenvolvida {
  id: ID!
  AreaTerrenoHectares: Float!
  DataInicio: Date!
  DataColheita: Date
  QtdColhida: Float
  Unidade: String!
  Agricultor: Agricultor
  Cultura: Cultura
}

input AgricultorWhereUniqueInput {
  id: ID
  Email: String
}
input AgricultorUpdateInput {
  Nome: String
  Email: String
  Senha: String
}
input ClienteUpdateInput {
  NomeCliente: String

  Agricultor: AgricultorUpdateOneInput
}
input ClienteWhereUniqueInput {
  id: ID
}
input ServicoUpdateInput {
  DescrServico: String
  ValorDiaHomem: Float

  Agricultor: AgricultorUpdateOneInput
}
input ServicoWhereUniqueInput {
  id: ID
}

input CulturaUpdateInput {
  DescrCultura: String
  QtdEstimadaPorHectare: Float
  Und: String
  Agricultor: AgricultorUpdateOneInput
}
input CulturaWhereUniqueInput {
  id: ID
}

input CulturaDesenvolvidaUpdateInput {
  AreaTerrenoHectares: Float
  DataInicio: Date
  DataColheita: Date
  QtdColhida: Float
  Unidade: String
  Agricultor: AgricultorUpdateOneRequiredInput
  Cultura: CulturaUpdateOneInput
}
input UsoInsumoRealUpdateManyMutationInput {
  Data: Date
  Qtd: Float
}
input CulturaEtapaCreateInput {
  DescrEtapa: String!
  NumEtapa: Float!
  MesInicio: Date!
  MesFim: Date!
  CulturaDesenvolvida: CulturaDesenvolvidaCreateOneInput
}
input CulturaDesenvolvidaCreateOneInput {
  create: CulturaDesenvolvidaCreateInput
  connect: CulturaDesenvolvidaWhereUniqueInput
}
input CulturaEtapaUpdateDataInput {
  DescrEtapa: String
  NumEtapa: Float
  MesInicio: Date
  MesFim: Date
  CulturaDesenvolvida: CulturaDesenvolvidaUpdateOneRequiredInput
}
input CulturaEtapaWhereUniqueInput {
  id: ID
}
input ServicoUpdateOneRequiredInput {
  create: ServicoCreateInput
  update: ServicoUpdateDataInput
  upsert: ServicoUpsertNestedInput
  connect: ServicoWhereUniqueInput
}
input ServicoUpdateDataInput {
  DescrServico: String
  ValorDiaHomem: Float

  Agricultor: AgricultorUpdateOneInput
}
input ServicoUpsertNestedInput {
  update: ServicoUpdateDataInput!
  create: ServicoCreateInput!
}
input ServicoPrestadoWhereUniqueInput {
  id: ID
}
input ServicoPrevistoUpdateInput {
  DiasHomem: Float
  CulturaEtapa: CulturaEtapaUpdateOneRequiredInput
  Servico: ServicoUpdateOneRequiredInput
}
input ServicoPrevistoWhereUniqueInput {
  id: ID
}
input UsoInsumoPrevistoUpdateInput {
  Qtd: Float
  CulturaEtapa: CulturaEtapaUpdateOneRequiredInput
  Insumo: InsumoUpdateOneRequiredInput
}
input InsumoUpdateOneRequiredInput {
  create: InsumoCreateInput
  update: InsumoUpdateDataInput
  upsert: InsumoUpsertNestedInput
  connect: InsumoWhereUniqueInput
}
input TipoInsumoCreateInput {
  NomeTipo: String!
  Agricultor: AgricultorCreateOneInput
}
input InsumoCreateInput {
  DescrInsumo: String!
  PrecoUnit: Float!
  Und: String!
  TipoInsumo: TipoInsumoCreateOneInput
}
input InsumoUpdateDataInput {
  DescrInsumo: String
  PrecoUnit: Float
  Und: String
  TipoInsumo: TipoInsumoUpdateOneInput
}
input InsumoUpsertNestedInput {
  update: InsumoUpdateDataInput!
  create: InsumoCreateInput!
}
input TipoInsumoCreateOneInput {
  create: TipoInsumoCreateInput
  connect: TipoInsumoWhereUniqueInput
}
input UsoInsumoPrevistoWhereUniqueInput {
  id: ID
}
input UsoInsumoRealUpdateInput {
  Data: Date
  Qtd: Float
  CulturaEtapa: CulturaEtapaUpdateOneRequiredInput
  Insumo: InsumoUpdateOneRequiredInput
}
input UsoInsumoRealWhereUniqueInput {
  id: ID
}
input ServicoCreateInput {
  DescrServico: String!
  ValorDiaHomem: Float!

  Agricultor: AgricultorCreateOneInput
}
input CulturaEtapaUpsertNestedInput {
  update: CulturaEtapaUpdateDataInput!
  create: CulturaEtapaCreateInput!
}
input CulturaEtapaUpdateOneRequiredInput {
  create: CulturaEtapaCreateInput
  update: CulturaEtapaUpdateDataInput
  upsert: CulturaEtapaUpsertNestedInput
  connect: CulturaEtapaWhereUniqueInput
}
input ServicoPrestadoUpdateInput {
  Data: Date
  DiasHomem: Float
  CulturaEtapa: CulturaEtapaUpdateOneRequiredInput
  Servico: ServicoUpdateOneRequiredInput
}
input CulturaEtapaUpdateInput {
  DescrEtapa: String
  NumEtapa: Float
  MesInicio: Date
  MesFim: Date
  CulturaDesenvolvida: CulturaDesenvolvidaUpdateOneRequiredInput
}

input DespesaRealizadaUpdateInput {
  DescrDetalhada: String
  Data: Date!
  Valor: Float
  Agricultor: AgricultorUpdateOneRequiredInput
  TipoDespesa: TipoDespesaUpdateOneRequiredInput
}
input DespesaRealizadaWhereUniqueInput {
  id: ID
}
input InsumoUpdateInput {
  DescrInsumo: String
  PrecoUnit: Float
  Und: String
  TipoInsumo: TipoInsumoUpdateOneInput
}
input InsumoWhereUniqueInput {
  id: ID
}

input VendaUpdateInput {
  Data: Date!
  Cliente: ClienteUpdateOneRequiredInput
}

input VendaItemUpdateInput {
  Qtd: Float
  Und: String
  PrecoUnit: Float
  Venda: VendaUpdateOneRequiredInput
  CulturaDesenvolvida: CulturaDesenvolvidaUpdateOneRequiredInput
}
input VendaItemWhereUniqueInput {
  id: ID
}
input AgricultorUpdateOneRequiredInput {
  create: AgricultorCreateInput
  update: AgricultorUpdateDataInput
  upsert: AgricultorUpsertNestedInput
  connect: AgricultorWhereUniqueInput
}
input AgricultorCreateInput {
  Nome: String!
  Email: String!
  Senha: String!
}
input AgricultorUpdateDataInput {
  Nome: String
  Email: String
  Senha: String
}
input AgricultorUpsertNestedInput {
  update: AgricultorUpdateDataInput!
  create: AgricultorCreateInput!
}
input CulturaUpdateOneInput {
  create: CulturaCreateInput
  update: CulturaUpdateDataInput
  upsert: CulturaUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: CulturaWhereUniqueInput
}
input CulturaCreateInput {
  DescrCultura: String!
  QtdEstimadaPorHectare: Float!
  Und: String!

  Agricultor: AgricultorCreateOneInput
}
input CulturaUpdateDataInput {
  DescrCultura: String
  QtdEstimadaPorHectare: Float
  Und: String
  Agricultor: AgricultorUpdateOneInput
}
input CulturaUpsertNestedInput {
  update: CulturaUpdateDataInput!
  create: CulturaCreateInput!
}
input TipoDespesaUpdateOneRequiredInput {
  create: TipoDespesaCreateInput
  update: TipoDespesaUpdateDataInput
  upsert: TipoDespesaUpsertNestedInput
  connect: TipoDespesaWhereUniqueInput
}
input TipoDespesaCreateInput {
  DescrTipoDespesa: String!
}
input TipoDespesaUpdateDataInput {
  DescrTipoDespesa: String
}
input TipoDespesaUpsertNestedInput {
  update: TipoDespesaUpdateDataInput!
  create: TipoDespesaCreateInput!
}

input TipoInsumoUpdateOneInput {
  create: TipoInsumoCreateInput
  update: TipoInsumoUpdateDataInput
  upsert: TipoInsumoUpsertNestedInput
  connect: TipoInsumoWhereUniqueInput
}
input TipoInsumoUpsertNestedInput {
  update: TipoInsumoUpdateDataInput!
  create: TipoInsumoCreateInput!
}

input TipoInsumoUpdateDataInput {
  NomeTipo: String
  Agricultor: AgricultorUpdateOneInput
}
input AgricultorUpdateOneInput {
  create: AgricultorCreateInput
  update: AgricultorUpdateDataInput
  upsert: AgricultorUpsertNestedInput
  delete: Boolean
  disconnect: Boolean
  connect: AgricultorWhereUniqueInput
}
input ClienteUpdateOneRequiredInput {
  create: ClienteCreateInput
  update: ClienteUpdateDataInput
  upsert: ClienteUpsertNestedInput
  connect: ClienteWhereUniqueInput
}
input ClienteUpsertNestedInput {
  update: ClienteUpdateDataInput!
  create: ClienteCreateInput!
}

input ClienteCreateInput {
  NomeCliente: String!

  Agricultor: AgricultorCreateOneInput
}
input VendaUpdateOneRequiredInput {
  create: VendaCreateInput
  update: VendaUpdateDataInput
  upsert: VendaUpsertNestedInput
  connect: VendaWhereUniqueInput
}
input VendaUpsertNestedInput {
  update: VendaUpdateDataInput!
  create: VendaCreateInput!
}
input VendaWhereUniqueInput {
  id: ID
}
input VendaUpdateDataInput {
  Data: Date!
  Cliente: ClienteUpdateOneRequiredInput
}
input VendaCreateInput {
  Data: Date!
  Cliente: ClienteCreateOneInput
}
input CulturaDesenvolvidaUpdateOneRequiredInput {
  create: CulturaDesenvolvidaCreateInput
  update: CulturaDesenvolvidaUpdateDataInput
  upsert: CulturaDesenvolvidaUpsertNestedInput
  connect: CulturaDesenvolvidaWhereUniqueInput
}
input CulturaDesenvolvidaWhereUniqueInput {
  id: ID
}
input CulturaDesenvolvidaUpsertNestedInput {
  update: CulturaDesenvolvidaUpdateDataInput!
  create: CulturaDesenvolvidaCreateInput!
}
input CulturaDesenvolvidaUpdateDataInput {
  AreaTerrenoHectares: Float
  DataInicio: Date!
  DataColheita: Date
  QtdColhida: Float
  Unidade: String
  Agricultor: AgricultorUpdateOneRequiredInput
  Cultura: CulturaUpdateOneInput
}
input CulturaDesenvolvidaCreateInput {
  AreaTerrenoHectares: Float!
  DataInicio: Date!
  DataColheita: Date
  QtdColhida: Float
  Unidade: String!
  Agricultor: AgricultorCreateOneInput
  Cultura: CulturaCreateOneInput
}
input TipoDespesaWhereUniqueInput {
  id: ID
}
input TipoInsumoWhereUniqueInput {
  id: ID
}
input ClienteUpdateDataInput {
  NomeCliente: String

  Agricultor: AgricultorUpdateOneInput
}
input ClienteCreateOneInput {
  create: ClienteCreateInput
  connect: ClienteWhereUniqueInput
}
input AgricultorCreateOneInput {
  create: AgricultorCreateInput
  connect: AgricultorWhereUniqueInput
}
input CulturaCreateOneInput {
  create: CulturaCreateInput
  connect: CulturaWhereUniqueInput
}

type Mutation {
  login(Email: String!, Senha: String!): AuthPayload
  signup(Email: String!, Senha: String!, Nome: String!): AuthPayload
  createContato(DescrContato: String!): Contato!
  createTipoDespesa(DescrTipoDespesa: String!): TipoDespesa!
  createDespesaRealizada(
    DescrDetalhada: String!
    Data: Date!
    Valor: Float!
    TipoDespesaId: ID!
  ): DespesaRealizada!
  createCliente(NomeCliente: String): Cliente!
  createVenda(Data: Date!, ClienteId: ID!): Venda!
  createVendaItem(
    Qtd: Float!
    Und: String!
    PrecoUnit: Float!
    VendaId: ID!
    CulturaDesenvolvidaId: ID!
  ): VendaItem!
  createCultura(
    DescrCultura: String!
    QtdEstimadaPorHectare: Float!
    Und: String!
  ): Cultura!
  createTipoInsumo(NomeTipo: String!): TipoInsumo!
  createServico(DescrServico: String!, ValorDiaHomem: Float!): Servico!
  createInsumo(
    DescrInsumo: String!
    PrecoUnit: Float!
    Und: String!
    TipoInsumoId: ID!
  ): Insumo!
  createUsoInsumoReal(
    Data: Date!
    Qtd: Float!
    CulturaEtapaId: ID!
    InsumoId: ID!
  ): UsoInsumoReal!
  createUsoInsumoPrevisto(
    Qtd: Float!
    CulturaEtapaId: ID!
    InsumoId: ID!
  ): UsoInsumoPrevisto!
  createServicoPrestado(
    Data: Date!
    DiasHomem: Float!
    CulturaEtapaId: ID!
    ServicoId: ID!
  ): ServicoPrestado!
  createServicoPrevisto(
    DiasHomem: Float!
    CulturaEtapaId: ID!
    ServicoId: ID!
  ): ServicoPrevisto!
  createCulturaEtapa(
    DescrEtapa: String!
    NumEtapa: Float!
    MesInicio: Date!
    MesFim: Date!
    CulturaDesenvolvidaId: ID!
  ): CulturaEtapa!
  createCulturaDesenvolvida(
    AreaTerrenoHectares: Float!
    DataInicio: Date!
    DataColheita: Date
    QtdColhida: Float
    Unidade: String!
    CulturaId: ID!
  ): CulturaDesenvolvida!
  deleteAgricultor(where: AgricultorWhereUniqueInput!): Agricultor
  updateAgricultor(
    data: AgricultorUpdateInput!
    where: AgricultorWhereUniqueInput!
  ): Agricultor
  updateCliente(
    data: ClienteUpdateInput!
    where: ClienteWhereUniqueInput!
  ): Cliente
  deleteCliente(where: ClienteWhereUniqueInput!): Cliente
  updateServico(
    data: ServicoUpdateInput!
    where: ServicoWhereUniqueInput!
  ): Servico
  deleteServico(where: ServicoWhereUniqueInput!): Servico
  updateCultura(
    data: CulturaUpdateInput!
    where: CulturaWhereUniqueInput!
  ): Cultura
  deleteCultura(where: CulturaWhereUniqueInput!): Cultura
  updateCulturaDesenvolvida(
    data: CulturaDesenvolvidaUpdateInput!
    where: CulturaDesenvolvidaWhereUniqueInput!
  ): CulturaDesenvolvida
  deleteCulturaDesenvolvida(
    where: CulturaDesenvolvidaWhereUniqueInput!
  ): CulturaDesenvolvida
  updateCulturaEtapa(
    data: CulturaEtapaUpdateInput!
    where: CulturaEtapaWhereUniqueInput!
  ): CulturaEtapa
  deleteCulturaEtapa(where: CulturaEtapaWhereUniqueInput!): CulturaEtapa
  updateDespesaRealizada(
    data: DespesaRealizadaUpdateInput!
    where: DespesaRealizadaWhereUniqueInput!
  ): DespesaRealizada
  deleteDespesaRealizada(
    where: DespesaRealizadaWhereUniqueInput!
  ): DespesaRealizada
  updateInsumo(data: InsumoUpdateInput!, where: InsumoWhereUniqueInput!): Insumo
  deleteInsumo(where: InsumoWhereUniqueInput!): Insumo
  updateServicoPrestado(
    data: ServicoPrestadoUpdateInput!
    where: ServicoPrestadoWhereUniqueInput!
  ): ServicoPrestado
  updateServicoPrevisto(
    data: ServicoPrevistoUpdateInput!
    where: ServicoPrevistoWhereUniqueInput!
  ): ServicoPrevisto
  updateUsoInsumoPrevisto(
    data: UsoInsumoPrevistoUpdateInput!
    where: UsoInsumoPrevistoWhereUniqueInput!
  ): UsoInsumoPrevisto
  updateUsoInsumoReal(
    data: UsoInsumoRealUpdateInput!
    where: UsoInsumoRealWhereUniqueInput!
  ): UsoInsumoReal
  deleteServicoPrestado(
    where: ServicoPrestadoWhereUniqueInput!
  ): ServicoPrestado
  deleteServicoPrevisto(
    where: ServicoPrevistoWhereUniqueInput!
  ): ServicoPrevisto
  deleteUsoInsumoPrevisto(
    where: UsoInsumoPrevistoWhereUniqueInput!
  ): UsoInsumoPrevisto
  deleteUsoInsumoReal(where: UsoInsumoRealWhereUniqueInput!): UsoInsumoReal
  updateVenda(data: VendaUpdateInput!, where: VendaWhereUniqueInput!): Venda
  deleteVenda(where: VendaWhereUniqueInput!): Venda
  updateVendaItem(
    data: VendaItemUpdateInput!
    where: VendaItemWhereUniqueInput!
  ): VendaItem
  deleteVendaItem(where: VendaItemWhereUniqueInput!): VendaItem
}

type Query {
  agricultor: Agricultor
  tipoDespesas: [TipoDespesa!]!
  tipoInsumoes: [TipoInsumo!]!
  servicoes: [Servico!]!
  clientes: [Cliente!]!
  culturas: [Cultura!]!
  vendas: [Venda!]!
  despesaRealizadas: [DespesaRealizada!]!
  culturaDesenvolvidas: [CulturaDesenvolvida!]!
  insumoes: [Insumo!]!
  vendaItems: [VendaItem!]!
  culturaEtapas: [CulturaEtapa!]!
  usoInsumoReals: [UsoInsumoReal!]!
  usoInsumoPrevistoes: [UsoInsumoPrevisto!]!
  servicoPrestadoes: [ServicoPrestado!]!
  servicoPrevistoes: [ServicoPrevisto!]!
}
